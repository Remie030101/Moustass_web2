name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-modules-

    - name: Install Backend Dependencies
      run: |
        cd backend
        npm install

    - name: Run Backend Tests
      run: |
        cd backend
        npm test -- --passWithNoTests || true

    - name: Build Docker Image
      run: |
        docker build -t web-project .

    - name: Test Docker Container
      run: |
        docker run -d -p 3000:3000 --name test-container web-project
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop test-container
        docker rm test-container

    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker Image
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        docker tag web-project ${{ secrets.DOCKERHUB_USERNAME }}/web-project:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/web-project:latest

    - name: Deploy to Production
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        echo "Add your deployment commands here"
        # Example deployment commands:
        # - For a VPS: ssh user@your-server "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/web-project:latest && docker-compose up -d"
        # - For Heroku: heroku container:push web -a your-app-name 